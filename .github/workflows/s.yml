name: GKI Kernel Build
permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      kernelsu_variant:
        description: "Select KernelSU"
        required: true
        type: choice
        options:
          - KernelSU-Next
          - SukiSU-Ultra
        default: SukiSU-Ultra
      android_version:
        description: "Select Android Version"
        required: true
        type: choice
        options:
          - 'android16'
          - 'android15'
        default: 'android15'
      kernel_version:
        description: "Select Kernel Version"
        required: true
        type: choice
        options:
          - '6.12'
          - '6.6'
        default: '6.6'
      os_patch_level:
        description: "Select Kernel Version"
        required: true
        type: choice
        options:
          - '2025-07'
          - 'lts'
        default: 'lts'
      use_bbr:
        description: 'Enable the BBR Algorithm?'
        required: true
        type: boolean
        default: true
      use_kpm:
        description: 'Enable the KPM Patch?'
        required: true
        type: boolean
        default: false
        
jobs:
  build-kernel-kernelsu-susfs:
    #Jika workflows stuck maka gunakan ubuntu-22.04
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"

    steps: 
      - name: Maximize Build Space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
      
      - name: Install Dependencies
        run: |
          sudo apt-mark hold firefox
          sudo apt-mark hold libc-bin
          sudo apt purge man-db
          sudo rm -rf /var/lib/man-db/auto-update
          sudo apt update
          sudo apt-get install -y --no-install-recommends \
            ccache python3 git curl build-essential libssl-dev bison flex libelf-dev jq
          
      - name: Set ccache
        run: |
          ccache --version
          ccache --max-size=3G
          ccache --set-config=compression=true
          echo "CCACHE_DIR=$HOME/.ccache_${{ inputs.android_version }}-${{ inputs.kernel_version }}-${{ inputs.os_patch_level }}" >> $GITHUB_ENV
          mkdir -p $HOME/.ccache_${{ inputs.android_version }}-${{ inputs.kernel_version }}-${{ inputs.os_patch_level }}
          
      - name: Restore ccache from cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ runner.os }}-${{ inputs.android_version }}-${{ inputs.kernel_version }}-${{ inputs.os_patch_level }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ inputs.android_version }}-${{ inputs.kernel_version }}-
            ccache-${{ runner.os }}-${{ inputs.android_version }}-
      
      - name: Install Repo
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+rx ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          FORMATTED_BRANCH="${{ inputs.android_version }}-${{ inputs.kernel_version }}-${{ inputs.os_patch_level }}"
          repo init --depth=1 --u https://android.googlesource.com/kernel/manifest -b common-${FORMATTED_BRANCH} --repo-rev=v2.16
          REMOTE_BRANCH=$(git ls-remote https://android.googlesource.com/kernel/common ${FORMATTED_BRANCH})
          DEFAULT_MANIFEST_PATH=.repo/manifests/default.xml
          
          if grep -q deprecated <<< $REMOTE_BRANCH; then
            echo "Found deprecated branch: $FORMATTED_BRANCH"
            sed -i "s/\"${FORMATTED_BRANCH}\"/\"deprecated\/${FORMATTED_BRANCH}\"/g" $DEFAULT_MANIFEST_PATH
          fi
          
          repo --trace sync -c -j$(nproc --all) --no-tags
          rm -rf ./common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm -rf ./msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"

          SUBLEVEL=$(grep '^SUBLEVEL' "./common/Makefile" | cut -d '=' -f2 | xargs)
          echo "SUBLEVEL=$SUBLEVEL" >> $GITHUB_ENV
    
      - name: Add KernelSU & Apply SUSFS Patches
        run: |
          # Clone repositories
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ inputs.android_version }}-${{ inputs.kernel_version }}
          git clone https://github.com/xrembo404/kernel_patches.git
          git clone https://github.com/xrembo404/AnyKernel3.git
          
          cd kernel_workspace
          if [ "${{ inputs.kernelsu_variant }}" == "KernelSU-Next" ]; then
            echo "Adding KernelSU Next..."
            curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash -s next
            BRANCH_NAME="NEXT"
            echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          elif [ "${{ inputs.kernelsu_variant }}" == "SukiSU-Ultra" ]; then
            echo "Adding KernelSU SukiSU..."
            curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
            BRANCH_NAME="SukiSU"
            echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          fi
          
          # Copy SUSFS patches
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ inputs.android_version }}-${{ inputs.kernel_version }}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          cp ../kernel_patches/69_hide_stuff.patch ./common/
          
          if [ "${{ inputs.kernelsu_variant }}" == "KernelSU-Next" ]; then
            echo "Applying SUSFS patches for KernelSU Next..."
            cd ./KernelSU-Next
            
            # Copy KernelSU-Next patches
            cp ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./
            cp ../../kernel_patches/next/susfs_fix_patches/v1.5.9/fix_apk_sign.c.patch ./
            cp ../../kernel_patches/next/susfs_fix_patches/v1.5.9/fix_core_hook.c.patch ./
            cp ../../kernel_patches/next/susfs_fix_patches/v1.5.9/fix_selinux.c.patch ./
            cp ../../kernel_patches/next/susfs_fix_patches/v1.5.9/fix_ksud.c.patch ./
            cp ../../kernel_patches/next/susfs_fix_patches/v1.5.9/fix_rules.c.patch ./
            cp ../../kernel_patches/next/susfs_fix_patches/v1.5.9/fix_sucompat.c.patch ./
            patch -p1 --forward --fuzz=3 < 10_enable_susfs_for_ksu.patch || true
            patch -p1 --forward --fuzz=3 < fix_apk_sign.c.patch
            patch -p1 --forward --fuzz=3 < fix_core_hook.c.patch
            patch -p1 --forward --fuzz=3 < fix_selinux.c.patch
            patch -p1 --forward --fuzz=3 < fix_ksud.c.patch
            patch -p1 --forward --fuzz=3 < fix_rules.c.patch
            patch -p1 --forward --fuzz=3 < fix_sucompat.c.patch
            
            KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
            echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          elif [ "${{ inputs.kernelsu_variant }}" == "SukiSU-Ultra" ]; then
            echo "Applying SUSFS patches for SukiSU..."
            cd ./KernelSU
            KSU_VERSION=$(expr $(git rev-list --count main 2>/dev/null || echo 13000) + 10700)
            echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
            curl -LSs https://github.com/$GITHUB_REPOSITORY/raw/main/.github/workflows/setup.sh -o setup.sh
            chmod +x setup.sh
            if [ ! -f "kernel/Makefile" ]; then
              echo "kernel/Makefile not found"
              ls -la
              exit 1
            fi
            ./setup.sh
          else
            echo "Invalid KernelSU variant selected!"
            exit 1
          fi

          cd ../common
          SUSFS_VERSION=$(grep '#define SUSFS_VERSION' ./include/linux/susfs.h | awk -F'"' '{print $2}')
          echo "SUSFS_VERSION=$SUSFS_VERSION" >> $GITHUB_ENV
          patch -p1 --fuzz=3 < 50_add_susfs_in_gki-${{ inputs.android_version }}-${{ inputs.kernel_version }}.patch || true
          patch -p1 -F 3 < 69_hide_stuff.patch
          
      - name: Apply Hooks Patches
        run: |
          cd kernel_workspace/common

          if [ "${{ inputs.kernelsu_variant }}" == "KernelSU-Next" ]; then
            echo "Applying hooks for KernelSU-Next..."
            cp ../../kernel_patches/next/scope_min_manual_hooks_v1.4.patch ./
            patch -p1 -F 3 < scope_min_manual_hooks_v1.4.patch
          elif [ "${{ inputs.kernelsu_variant }}" == "SukiSU-Ultra" ]; then
            echo "Applying hooks for SukiSU..."
            cp ../../kernel_patches/sukisu/syscall_hooks.patch ./
            patch -p1 -F 3 < syscall_hooks.patch
          fi

      - name: Upgrade LZ4 to v1.10.0
        run: |
          cd kernel_workspace/common
          
          # Delete old files in lz4 library
          files=(
            "lib/lz4/lz4_compress.c"
            "lib/lz4/lz4_decompress.c"
            "lib/lz4/lz4defs.h"
            "lib/lz4/lz4hc_compress.c"
          )

          for file in "${files[@]}"; do
            if [ -e "$file" ]; then
              rm -rf "$file"
              echo "$file Deleted"
            else
              echo "$file Does not exist"
            fi
          done

          cp -r ../../kernel_patches/zram/lz4/* ./lib/lz4/
          cp -r ../../kernel_patches/zram/include/linux/* ./include/linux/
          cp -r ../../kernel_patches/zram/${{ inputs.kernel_version }}/lz4_1.10.0.patch ./
          patch -p1 -F 3 --fuzz=5 < lz4_1.10.0.patch || true

          # Check if the file exists
          if [ -f "fs/f2fs/Makefile" ]; then
            # Check whether the specified line is contained
            if ! grep -qF "f2fs-\$(CONFIG_F2FS_IOSTAT) += iostat.o" "fs/f2fs/Makefile"; then
              echo "f2fs-\$(CONFIG_F2FS_IOSTAT) += iostat.o" >> "fs/f2fs/Makefile"
              echo "Added: f2fs-\$(CONFIG_F2FS_IOSTAT) += iostat.o"
            else
              echo "File already contains: f2fs-\$(CONFIG_F2FS_IOSTAT) += iostat.o"
            fi
          else
            echo "File does not exist: fs/f2fs/Makefile"
          fi
          
      - name: Apply ECN and TCP Pacing Tweaks
        run: |
          set -e
          TCP_IPV4_PATH="$GITHUB_WORKSPACE/kernel_workspace/common/net/ipv4/tcp_ipv4.c"
          if [ ! -f "$TCP_IPV4_PATH" ]; then echo "ERROR: $TCP_IPV4_PATH not found!"; exit 1; fi
          sed -i 's/net->ipv4.sysctl_tcp_ecn = 2;/net->ipv4.sysctl_tcp_ecn = 1;/' "$TCP_IPV4_PATH"
          sed -i 's/net->ipv4.sysctl_tcp_pacing_ss_ratio = 200;/net->ipv4.sysctl_tcp_pacing_ss_ratio = 150;/' "$TCP_IPV4_PATH"
          sed -i 's/net->ipv4.sysctl_tcp_pacing_ca_ratio = 120;/net->ipv4.sysctl_tcp_pacing_ca_ratio = 110;/' "$TCP_IPV4_PATH"
          echo "ECN and TCP Pacing tweaks successfully applied."
          
      - name: Add Configuration Settings
        run: |
          cd kernel_workspace
          curl -LSs https://github.com/$GITHUB_REPOSITORY/raw/main/.github/workflows/setup.sh -o setup.sh
          FILE="./common/arch/arm64/configs/gki_defconfig"

          set_config() {
            KEY="$1"
            VALUE="$2"

            if grep -q "^$KEY=" "$FILE"; then
              CURRENT_VALUE=$(grep "^$KEY=" "$FILE" | head -n1 | cut -d '=' -f2)
              if [ "$CURRENT_VALUE" != "$VALUE" ]; then
                echo "Updating $KEY from $CURRENT_VALUE to $VALUE"
                sed -i "s|^$KEY=.*|$KEY=$VALUE|" "$FILE"
              else
                echo "$KEY is already set to $VALUE — skipping"
              fi
            else
              echo "Adding $KEY=$VALUE"
              echo "$KEY=$VALUE" >> "$FILE"
            fi
          }
          
          # KSU Configuration
          set_config CONFIG_KSU y
          if [ "${{ inputs.kernelsu_variant }}" == "KernelSU-Next" ]; then
            set_config CONFIG_KSU_KPROBES_HOOK y
            set_config CONFIG_KSU_MANUAL_HOOK n
            set_config CONFIG_KSU_SUSFS_SUS_SU n
          elif [ "${{ inputs.kernelsu_variant }}" == "SukiSU-Ultra" ]; then
            if [ "${{ inputs.use_kpm }}" == "true" ]; then
              KPM="KPM"
              echo "MODEKPM=$KPM" >> $GITHUB_ENV
              set_config CONFIG_KPM y
              set_config CONFIG_KALLSYMS y
              set_config CONFIG_KALLSYMS_ALL y
              set_config CONFIG_KALLSYMS_BASE_RELATIVE y
            else
              NOKPM="NoKPM"
              echo "MODEKPM=$NOKPM" >> $GITHUB_ENV
            fi
            set_config CONFIG_KSU_SUSFS_SUS_SU n
            set_config CONFIG_KSU_MANUAL_HOOK y
          fi

          # Enable advanced compression support
          set_config CONFIG_CRYPTO_LZ4 y
          set_config CONFIG_CRYPTO_LZ4HC y
          
          # File system level compression support
          set_config CONFIG_F2FS_FS_COMPRESSION y
          set_config CONFIG_F2FS_FS_LZ4 y
          set_config CONFIG_F2FS_FS_LZ4HC y

          # Kernel image compression configuration
          set_config CONFIG_KERNEL_LZ4 y
          
          # Hibernation Configuration
          set_config CONFIG_HIBERNATION y
          set_config CONFIG_HIBERNATION_COMPRESS y
          set_config CONFIG_HIBERNATION_COMPRESS_ALGO_LZ4 y
          
          # TMPFS Configuration
          set_config CONFIG_RCU_TRACE n
          set_config CONFIG_TMPFS_XATTR y
          set_config CONFIG_TMPFS_POSIX_ACL y

          # NF Configuration
          set_config CONFIG_IP_NF_TARGET_TTL y
          set_config CONFIG_IP6_NF_TARGET_HL y
          set_config CONFIG_IP6_NF_MATCH_HL y
          set_config CONFIG_IP_NF_TARGET_ECN y
          
          # ECN Configuration
          set_config CONFIG_IP_ECN y
          set_config CONFIG_TCP_ECN y
          set_config CONFIG_IPV6_ECN y
          
          # SUSFS Configuration
          set_config CONFIG_KSU_SUSFS y
          set_config CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT y
          set_config CONFIG_KSU_SUSFS_SUS_PATH y
          set_config CONFIG_KSU_SUSFS_SUS_MOUNT y
          set_config CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT y
          set_config CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT y
          set_config CONFIG_KSU_SUSFS_SUS_KSTAT y
          set_config CONFIG_KSU_SUSFS_SUS_OVERLAYFS n
          set_config CONFIG_KSU_SUSFS_TRY_UMOUNT y
          set_config CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT y
          set_config CONFIG_KSU_SUSFS_SPOOF_UNAME y
          set_config CONFIG_KSU_SUSFS_ENABLE_LOG y
          set_config CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS y
          set_config CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG y
          set_config CONFIG_KSU_SUSFS_OPEN_REDIRECT y

          # AutoFDO Configuration (Feedback-Directed Optimization)
          set_config CONFIG_AUTOFDO_CLANG y
          set_config CONFIG_WIREGUARD y
          
          if [ "${{ inputs.use_bbr }}" == "true" ]; then
            # BBR Configuration
            set_config CONFIG_NET_SCH_FQ y
            set_config CONFIG_TCP_CONG_ADVANCED y
            set_config CONFIG_TCP_CONG_BBR y
            set_config CONFIG_TCP_CONG_CUBIC y
            set_config CONFIG_TCP_CONG_WESTWOOD y
            set_config CONFIG_TCP_CONG_VEGAS y
            # set_config CONFIG_TCP_CONG_BIC y
            # set_config CONFIG_TCP_CONG_HTCP y
            # set_config CONFIG_TCP_CONG_NV y
            # set_config CONFIG_TCP_CONG_BRUTAL y
            set_config CONFIG_DEFAULT_TCP_CONG bbr
            # set_config CONFIG_DEFAULT_BBR y
          fi

          # More Configuration
          set_config CONFIG_NETFILTER_XT_MATCH_ADDRTYPE y
          set_config CONFIG_NETFILTER_XT_SET y
          set_config CONFIG_IP_SET y
          set_config CONFIG_IP_SET_MAX 65534
          set_config CONFIG_IP_SET_BITMAP_IP y
          set_config CONFIG_IP_SET_BITMAP_IPMAC y
          set_config CONFIG_IP_SET_BITMAP_PORT y
          set_config CONFIG_IP_SET_HASH_IP y
          set_config CONFIG_IP_SET_HASH_IPMARK y
          set_config CONFIG_IP_SET_HASH_IPPORT y
          set_config CONFIG_IP_SET_HASH_IPPORTIP y
          set_config CONFIG_IP_SET_HASH_IPPORTNET y
          set_config CONFIG_IP_SET_HASH_IPMAC y
          set_config CONFIG_IP_SET_HASH_MAC y
          set_config CONFIG_IP_SET_HASH_NETPORTNET y
          set_config CONFIG_IP_SET_HASH_NET y
          set_config CONFIG_IP_SET_HASH_NETNET y
          set_config CONFIG_IP_SET_HASH_NETPORT y
          set_config CONFIG_IP_SET_HASH_NETIFACE y
          set_config CONFIG_IP_SET_LIST_SET y
          set_config CONFIG_IP6_NF_NAT y
          set_config CONFIG_IP6_NF_IPTABLES y
          set_config CONFIG_IP6_NF_TARGET_MASQUERADE y
            
          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Change Kernel Name
        run: |
          cd kernel_workspace
          sed -i 's/${scm_version}//' ./common/scripts/setlocalversion
          sudo sed -i 's/-4k/-android15-8-g7f19c751e334-ab13222567-4k/g' ./common/arch/arm64/configs/gki_defconfig
      
      - name: 🔨 Build with retry
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          retry_on: timeout
          command: |
            set -e
            set -x
            cd kernel_workspace/common
            
            sed -i 's/BUILD_SYSTEM_DLKM=1/BUILD_SYSTEM_DLKM=0/' ./build.config.gki.aarch64
            sed -i '/MODULES_ORDER=android\/gki_aarch64_modules/d' ./build.config.gki.aarch64
            sed -i '/KMI_SYMBOL_LIST_STRICT_MODE/d' ./build.config.gki.aarch64
            
            export KBUILD_BUILD_TIMESTAMP="Tue Mar 11 12:18:17 UTC 2025"
            export PATH="$GITHUB_WORKSPACE/kernel_workspace/prebuilts/clang/host/linux-x86/clang-r510928/bin:$PATH"
            export PATH="/usr/lib/ccache:$PATH"

            make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC="ccache clang" RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole LD=ld.lld HOSTLD=ld.lld O=out KCFLAGS+=-O2 gki_defconfig || { echo "make defconfig failed"; exit 1; }
            make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC="ccache clang" RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole LD=ld.lld HOSTLD=ld.lld O=out KCFLAGS+=-O2 Image || { echo "make failed"; exit 1; }

      - name: 📦 Apply KPM Patch (SukiSU only)
        if: ${{ inputs.use_kpm }}
        run: |
          cd kernel_workspace/common/out/arch/arm64/boot
          TAG=$(curl -s https://api.github.com/repos/SukiSU-Ultra/SukiSU_KernelPatch_patch/releases | jq -r 'map(select(.prerelease == false and .draft == false)) | first | .tag_name')
          echo "Latest tag is: $TAG"
          curl -LSs -o patch_linux "https://github.com/SukiSU-Ultra/SukiSU_KernelPatch_patch/releases/download/$TAG/patch_linux"
          chmod +x patch_linux
          ./patch_linux
          rm -f Image
          mv oImage Image
          
      - name: 📦 Make AnyKernel3
        run: |
          cd ./AnyKernel3
          ZIP_NAME="AnyKernel3_${{ env.BRANCH_NAME }}_${{ env.MODEKPM }}_${{ inputs.kernel_version }}.${{ env.SUBLEVEL }}.zip"
          mv ../kernel_workspace/common/out/arch/arm64/boot/Image ./Image
          zip -q -r "../$ZIP_NAME" ./*
          
      - name: 📤 Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_${{ env.BRANCH_NAME }}_${{ env.MODEKPM }}_${{ inputs.kernel_version }}.${{ env.SUBLEVEL }}
          path: ./AnyKernel3/*

      - name: Package files
        run: |
          echo "Packing files..."
          ESCAPED_KERNEL_VER=$(echo "${{ inputs.android_version }}-${{ inputs.kernel_version }}.${{ env.SUBLEVEL }}" | sed -e 's/\./\\./g' -e 's/-/\\-/g')
          ESCAPED_KSU_VARIANT=$(echo "${{ inputs.kernelsu_variant }} (${{ env.KSUVER }})" | sed -e 's/\./\\./g' -e 's/-/\\-/g' -e 's/(/\\(/g' -e 's/)/\\)/g')
          cat > release.txt << EOF
          **New Build Published\!\!**
          >KernelVer: $ESCAPED_KERNEL_VER
          >DriverKSU: $ESCAPED_KSU_VARIANT
          EOF
          
          cat >> release.txt << 'EOF'
          ```Features:
          [+] SUSFS ඞ ${{ env.SUSFS_VERSION }}
          [+] LZ4 v1.10.0 (Optimization armv8a)
          [+] TCP Pacing Tweaks
          [+] Wireguard Support
          [+] Magic Mount Support
          [+] BBR + ECN Support
          [+] TMPFS + RCU Support
          ```
          EOF
          
      - name: Upload to telegram
        uses: puernya/tg-bot-upload@v1
        with:
          bot-id: ${{ secrets.BOT_ID }}
          chat-id: ${{ secrets.CHAT_ID }}
          topic-id: ${{ secrets.TOPIC_ID }} 
          file-path: |
                  *.zip
          caption-path: release.txt
          parse-mode: MarkdownV2
